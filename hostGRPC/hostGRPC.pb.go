// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: hostGRPC.proto

package hostGRPC

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreeId    int64     `protobuf:"zigzag64,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	NodeId    int64     `protobuf:"zigzag64,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	G         []float64 `protobuf:"fixed64,3,rep,packed,name=G,proto3" json:"G,omitempty"`
	H         []float64 `protobuf:"fixed64,4,rep,packed,name=H,proto3" json:"H,omitempty"`
	SamplesId []int64   `protobuf:"zigzag64,5,rep,packed,name=samplesId,proto3" json:"samplesId,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostGRPC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostGRPC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_hostGRPC_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetTreeId() int64 {
	if x != nil {
		return x.TreeId
	}
	return 0
}

func (x *NodeInfo) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeInfo) GetG() []float64 {
	if x != nil {
		return x.G
	}
	return nil
}

func (x *NodeInfo) GetH() []float64 {
	if x != nil {
		return x.H
	}
	return nil
}

func (x *NodeInfo) GetSamplesId() []int64 {
	if x != nil {
		return x.SamplesId
	}
	return nil
}

type LeftInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitId []int64   `protobuf:"zigzag64,1,rep,packed,name=splitId,proto3" json:"splitId,omitempty"`
	GL      []float64 `protobuf:"fixed64,2,rep,packed,name=GL,proto3" json:"GL,omitempty"`
	HL      []float64 `protobuf:"fixed64,3,rep,packed,name=HL,proto3" json:"HL,omitempty"`
}

func (x *LeftInfo) Reset() {
	*x = LeftInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostGRPC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeftInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeftInfo) ProtoMessage() {}

func (x *LeftInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostGRPC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeftInfo.ProtoReflect.Descriptor instead.
func (*LeftInfo) Descriptor() ([]byte, []int) {
	return file_hostGRPC_proto_rawDescGZIP(), []int{1}
}

func (x *LeftInfo) GetSplitId() []int64 {
	if x != nil {
		return x.SplitId
	}
	return nil
}

func (x *LeftInfo) GetGL() []float64 {
	if x != nil {
		return x.GL
	}
	return nil
}

func (x *LeftInfo) GetHL() []float64 {
	if x != nil {
		return x.HL
	}
	return nil
}

type HostSavingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreeId  int64 `protobuf:"zigzag64,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	NodeId  int64 `protobuf:"zigzag64,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	SplitId int64 `protobuf:"zigzag64,3,opt,name=splitId,proto3" json:"splitId,omitempty"` //  repeated sint64 samplesId = 4 [packed=true];
}

func (x *HostSavingInfo) Reset() {
	*x = HostSavingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostGRPC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSavingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSavingInfo) ProtoMessage() {}

func (x *HostSavingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostGRPC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSavingInfo.ProtoReflect.Descriptor instead.
func (*HostSavingInfo) Descriptor() ([]byte, []int) {
	return file_hostGRPC_proto_rawDescGZIP(), []int{2}
}

func (x *HostSavingInfo) GetTreeId() int64 {
	if x != nil {
		return x.TreeId
	}
	return 0
}

func (x *HostSavingInfo) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *HostSavingInfo) GetSplitId() int64 {
	if x != nil {
		return x.SplitId
	}
	return 0
}

type SplitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureId      int64   `protobuf:"zigzag64,1,opt,name=featureId,proto3" json:"featureId,omitempty"`
	LeftSamplesId  []int64 `protobuf:"zigzag64,2,rep,packed,name=leftSamplesId,proto3" json:"leftSamplesId,omitempty"`
	RightSamplesId []int64 `protobuf:"zigzag64,3,rep,packed,name=rightSamplesId,proto3" json:"rightSamplesId,omitempty"`
}

func (x *SplitInfo) Reset() {
	*x = SplitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostGRPC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitInfo) ProtoMessage() {}

func (x *SplitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostGRPC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitInfo.ProtoReflect.Descriptor instead.
func (*SplitInfo) Descriptor() ([]byte, []int) {
	return file_hostGRPC_proto_rawDescGZIP(), []int{3}
}

func (x *SplitInfo) GetFeatureId() int64 {
	if x != nil {
		return x.FeatureId
	}
	return 0
}

func (x *SplitInfo) GetLeftSamplesId() []int64 {
	if x != nil {
		return x.LeftSamplesId
	}
	return nil
}

func (x *SplitInfo) GetRightSamplesId() []int64 {
	if x != nil {
		return x.RightSamplesId
	}
	return nil
}

type NextNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLeft []bool `protobuf:"varint,1,rep,packed,name=isLeft,proto3" json:"isLeft,omitempty"`
}

func (x *NextNode) Reset() {
	*x = NextNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostGRPC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextNode) ProtoMessage() {}

func (x *NextNode) ProtoReflect() protoreflect.Message {
	mi := &file_hostGRPC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextNode.ProtoReflect.Descriptor instead.
func (*NextNode) Descriptor() ([]byte, []int) {
	return file_hostGRPC_proto_rawDescGZIP(), []int{4}
}

func (x *NextNode) GetIsLeft() []bool {
	if x != nil {
		return x.IsLeft
	}
	return nil
}

var File_hostGRPC_proto protoreflect.FileDescriptor

var file_hostGRPC_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x01, 0x47, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x01, 0x47, 0x12, 0x10, 0x0a, 0x01, 0x48, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x01, 0x48, 0x12, 0x20, 0x0a, 0x09, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x12, 0x42, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x22, 0x50, 0x0a,
	0x08, 0x6c, 0x65, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x12, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x02, 0x47, 0x4c, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x47, 0x4c, 0x12, 0x12, 0x0a, 0x02, 0x48,
	0x4c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x48, 0x4c, 0x22,
	0x5a, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x09, 0x73,
	0x70, 0x6c, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x12, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x12, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x65,
	0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x69, 0x73,
	0x4c, 0x65, 0x66, 0x74, 0x32, 0xb5, 0x01, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x47,
	0x48, 0x12, 0x12, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43,
	0x2e, 0x6c, 0x65, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x13, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x78, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x47,
	0x52, 0x50, 0x43, 0x2e, 0x6e, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x3b, 0x68, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hostGRPC_proto_rawDescOnce sync.Once
	file_hostGRPC_proto_rawDescData = file_hostGRPC_proto_rawDesc
)

func file_hostGRPC_proto_rawDescGZIP() []byte {
	file_hostGRPC_proto_rawDescOnce.Do(func() {
		file_hostGRPC_proto_rawDescData = protoimpl.X.CompressGZIP(file_hostGRPC_proto_rawDescData)
	})
	return file_hostGRPC_proto_rawDescData
}

var file_hostGRPC_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_hostGRPC_proto_goTypes = []interface{}{
	(*NodeInfo)(nil),       // 0: hostGRPC.nodeInfo
	(*LeftInfo)(nil),       // 1: hostGRPC.leftInfo
	(*HostSavingInfo)(nil), // 2: hostGRPC.hostSavingInfo
	(*SplitInfo)(nil),      // 3: hostGRPC.splitInfo
	(*NextNode)(nil),       // 4: hostGRPC.nextNode
}
var file_hostGRPC_proto_depIdxs = []int32{
	0, // 0: hostGRPC.hostService.calLeftGH:input_type -> hostGRPC.nodeInfo
	2, // 1: hostGRPC.hostService.hostSave:input_type -> hostGRPC.hostSavingInfo
	0, // 2: hostGRPC.hostService.findNextNode:input_type -> hostGRPC.nodeInfo
	1, // 3: hostGRPC.hostService.calLeftGH:output_type -> hostGRPC.leftInfo
	3, // 4: hostGRPC.hostService.hostSave:output_type -> hostGRPC.splitInfo
	4, // 5: hostGRPC.hostService.findNextNode:output_type -> hostGRPC.nextNode
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hostGRPC_proto_init() }
func file_hostGRPC_proto_init() {
	if File_hostGRPC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hostGRPC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostGRPC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeftInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostGRPC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSavingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostGRPC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostGRPC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hostGRPC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostGRPC_proto_goTypes,
		DependencyIndexes: file_hostGRPC_proto_depIdxs,
		MessageInfos:      file_hostGRPC_proto_msgTypes,
	}.Build()
	File_hostGRPC_proto = out.File
	file_hostGRPC_proto_rawDesc = nil
	file_hostGRPC_proto_goTypes = nil
	file_hostGRPC_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HostServiceClient is the client API for HostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HostServiceClient interface {
	//添加商品
	CalLeftGH(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*LeftInfo, error)
	//获取商品
	HostSave(ctx context.Context, in *HostSavingInfo, opts ...grpc.CallOption) (*SplitInfo, error)
	FindNextNode(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NextNode, error)
}

type hostServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHostServiceClient(cc grpc.ClientConnInterface) HostServiceClient {
	return &hostServiceClient{cc}
}

func (c *hostServiceClient) CalLeftGH(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*LeftInfo, error) {
	out := new(LeftInfo)
	err := c.cc.Invoke(ctx, "/hostGRPC.hostService/calLeftGH", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostServiceClient) HostSave(ctx context.Context, in *HostSavingInfo, opts ...grpc.CallOption) (*SplitInfo, error) {
	out := new(SplitInfo)
	err := c.cc.Invoke(ctx, "/hostGRPC.hostService/hostSave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostServiceClient) FindNextNode(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NextNode, error) {
	out := new(NextNode)
	err := c.cc.Invoke(ctx, "/hostGRPC.hostService/findNextNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HostServiceServer is the server API for HostService service.
type HostServiceServer interface {
	//添加商品
	CalLeftGH(context.Context, *NodeInfo) (*LeftInfo, error)
	//获取商品
	HostSave(context.Context, *HostSavingInfo) (*SplitInfo, error)
	FindNextNode(context.Context, *NodeInfo) (*NextNode, error)
}

// UnimplementedHostServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHostServiceServer struct {
}

func (*UnimplementedHostServiceServer) CalLeftGH(context.Context, *NodeInfo) (*LeftInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalLeftGH not implemented")
}
func (*UnimplementedHostServiceServer) HostSave(context.Context, *HostSavingInfo) (*SplitInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HostSave not implemented")
}
func (*UnimplementedHostServiceServer) FindNextNode(context.Context, *NodeInfo) (*NextNode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindNextNode not implemented")
}

func RegisterHostServiceServer(s *grpc.Server, srv HostServiceServer) {
	s.RegisterService(&_HostService_serviceDesc, srv)
}

func _HostService_CalLeftGH_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).CalLeftGH(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hostGRPC.hostService/CalLeftGH",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).CalLeftGH(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _HostService_HostSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostSavingInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).HostSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hostGRPC.hostService/HostSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).HostSave(ctx, req.(*HostSavingInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _HostService_FindNextNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServiceServer).FindNextNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hostGRPC.hostService/FindNextNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServiceServer).FindNextNode(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _HostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hostGRPC.hostService",
	HandlerType: (*HostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "calLeftGH",
			Handler:    _HostService_CalLeftGH_Handler,
		},
		{
			MethodName: "hostSave",
			Handler:    _HostService_HostSave_Handler,
		},
		{
			MethodName: "findNextNode",
			Handler:    _HostService_FindNextNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hostGRPC.proto",
}
